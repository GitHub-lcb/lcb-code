<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.ScoreRecordMapper">
    
    <resultMap type="ScoreRecord" id="ScoreRecordResult">
        <result property="id"    column="id"    />
        <result property="goods"    column="goods"    />
        <result property="scoreTotal"    column="score_total"    />
        <result property="scoreRemain"    column="score_remain"    />
        <result property="scoreCost"    column="score_cost"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectScoreRecordVo">
        select id, goods, score_total, score_remain, score_cost, del_flag, create_by, create_time, update_by, update_time from score_record
    </sql>

    <select id="selectScoreRecordList" parameterType="ScoreRecord" resultMap="ScoreRecordResult">
        <include refid="selectScoreRecordVo"/>
        <where>  
            <if test="goods != null  and goods != ''"> and goods like concat('%', #{goods}, '%')</if>
            <if test="createBy != null  and createBy != ''"> and create_by like concat('%', #{createBy}, '%')</if>
            and del_flag = '0' order by create_time desc
        </where>
    </select>
    
    <select id="selectScoreRecordById" parameterType="Long" resultMap="ScoreRecordResult">
        <include refid="selectScoreRecordVo"/>
        where id = #{id}
    </select>
    <select id="selectScoreRecordByUserName" parameterType="String" resultMap="ScoreRecordResult">
        <include refid="selectScoreRecordVo"/>
        where  create_by = #{username} order by create_time desc limit 1
    </select>


        
    <insert id="insertScoreRecord" parameterType="ScoreRecord" useGeneratedKeys="true" keyProperty="id">
        insert into score_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goods != null">goods,</if>
            <if test="scoreTotal != null">score_total,</if>
            <if test="scoreRemain != null">score_remain,</if>
            <if test="scoreCost != null">score_cost,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goods != null">#{goods},</if>
            <if test="scoreTotal != null">#{scoreTotal},</if>
            <if test="scoreRemain != null">#{scoreRemain},</if>
            <if test="scoreCost != null">#{scoreCost},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateScoreRecord" parameterType="ScoreRecord">
        update score_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="goods != null">goods = #{goods},</if>
            <if test="scoreTotal != null">score_total = #{scoreTotal},</if>
            <if test="scoreRemain != null">score_remain = #{scoreRemain},</if>
            <if test="scoreCost != null">score_cost = #{scoreCost},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteScoreRecordById" parameterType="Long">
        delete from score_record where id = #{id}
    </delete>

    <delete id="deleteScoreRecordByIds" parameterType="String">
        delete from score_record where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>